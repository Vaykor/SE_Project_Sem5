// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelPlaner.Model.Classes.Context;

#nullable disable

namespace TravelPlaner.Migrations
{
    [DbContext(typeof(TravelPlannerContext))]
    [Migration("20241215022727_FirstCreate")]
    partial class FirstCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.Destination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TripSegmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TripSegmentId");

                    b.ToTable("Destination");
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TripSegmentId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TripSegmentId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.TripMemory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SongURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TripSegmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TripSegmentId");

                    b.ToTable("TripMemory");
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.TripSegment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripSegment");
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.Destination", b =>
                {
                    b.HasOne("TravelPlaner.Model.Classes.Database.TripSegment", null)
                        .WithMany("Destinations")
                        .HasForeignKey("TripSegmentId");
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.Expense", b =>
                {
                    b.HasOne("TravelPlaner.Model.Classes.Database.TripSegment", null)
                        .WithMany("Expenses")
                        .HasForeignKey("TripSegmentId");
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.TripMemory", b =>
                {
                    b.HasOne("TravelPlaner.Model.Classes.Database.TripSegment", null)
                        .WithMany("Memories")
                        .HasForeignKey("TripSegmentId");
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.TripSegment", b =>
                {
                    b.HasOne("TravelPlaner.Model.Classes.Database.Trip", null)
                        .WithMany("TripSegments")
                        .HasForeignKey("TripId");
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.Trip", b =>
                {
                    b.Navigation("TripSegments");
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.TripSegment", b =>
                {
                    b.Navigation("Destinations");

                    b.Navigation("Expenses");

                    b.Navigation("Memories");
                });
#pragma warning restore 612, 618
        }
    }
}
