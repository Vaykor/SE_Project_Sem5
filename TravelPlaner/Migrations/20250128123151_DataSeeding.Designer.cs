// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelPlaner.Model.Classes.Context;

#nullable disable

namespace TravelPlaner.Migrations
{
    [DbContext(typeof(TravelPlannerContext))]
    [Migration("20250128123151_DataSeeding")]
    partial class DataSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.Destination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TripSegmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TripSegmentId");

                    b.ToTable("Destination");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Destination");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TripSegmentId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TripSegmentId");

                    b.ToTable("Expenses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Flight to Paris",
                            TripSegmentId = 1,
                            Value = 500.0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hotel Stay in Berlin",
                            TripSegmentId = 2,
                            Value = 300.0
                        });
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2024, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "European Adventure",
                            StartDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2025, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Road Trip USA",
                            StartDate = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.TripMemory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SongURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TripSegmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TripSegmentId");

                    b.ToTable("TripMemory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Eiffel Tower Selfie",
                            Note = "Amazing view!",
                            Photo = "photo_base64_string_here",
                            SongURL = "https://example.com/song.mp3",
                            TripSegmentId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Brandenburg Gate Visit",
                            Note = "Historical moment",
                            Photo = "photo_base64_string_here",
                            SongURL = "https://example.com/song.mp3",
                            TripSegmentId = 2
                        });
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.TripSegment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripSegment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Paris Stay",
                            TripId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Berlin Visit",
                            TripId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "New York Experience",
                            TripId = 2
                        });
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.Landmark", b =>
                {
                    b.HasBaseType("TravelPlaner.Model.Classes.Database.Destination");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Landmark");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TripSegmentId = 1,
                            Address = "Champ de Mars, Paris",
                            Description = "Iconic iron structure",
                            Name = "Eiffel Tower"
                        },
                        new
                        {
                            Id = 2,
                            TripSegmentId = 2,
                            Address = "Berlin, Germany",
                            Description = "Historical landmark",
                            Name = "Brandenburg Gate"
                        });
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.RestingPoint", b =>
                {
                    b.HasBaseType("TravelPlaner.Model.Classes.Database.Destination");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NightsSpentThere")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.ToTable("Destination", t =>
                        {
                            t.Property("Address")
                                .HasColumnName("RestingPoint_Address");

                            t.Property("Name")
                                .HasColumnName("RestingPoint_Name");
                        });

                    b.HasDiscriminator().HasValue("RestingPoint");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            TripSegmentId = 1,
                            Address = "123 Champs-Élysées",
                            ContactInfo = "hotelparis@example.com",
                            Name = "Hotel Paris",
                            NightsSpentThere = 3,
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            TripSegmentId = 2,
                            Address = "42 Alexanderplatz",
                            ContactInfo = "berlinhostel@example.com",
                            Name = "Berlin Hostel",
                            NightsSpentThere = 2,
                            Type = 1
                        });
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.Destination", b =>
                {
                    b.HasOne("TravelPlaner.Model.Classes.Database.TripSegment", "TripSegment")
                        .WithMany("Destinations")
                        .HasForeignKey("TripSegmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TripSegment");
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.Expense", b =>
                {
                    b.HasOne("TravelPlaner.Model.Classes.Database.TripSegment", "TripSegment")
                        .WithMany("Expenses")
                        .HasForeignKey("TripSegmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TripSegment");
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.TripMemory", b =>
                {
                    b.HasOne("TravelPlaner.Model.Classes.Database.TripSegment", "TripSegment")
                        .WithMany("Memories")
                        .HasForeignKey("TripSegmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TripSegment");
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.TripSegment", b =>
                {
                    b.HasOne("TravelPlaner.Model.Classes.Database.Trip", "Trip")
                        .WithMany("TripSegments")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.Trip", b =>
                {
                    b.Navigation("TripSegments");
                });

            modelBuilder.Entity("TravelPlaner.Model.Classes.Database.TripSegment", b =>
                {
                    b.Navigation("Destinations");

                    b.Navigation("Expenses");

                    b.Navigation("Memories");
                });
#pragma warning restore 612, 618
        }
    }
}
